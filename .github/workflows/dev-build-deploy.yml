# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: DEV BUILD DEPLOY

on:
  schedule:
    - cron: '0 2 * * 2'
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]
  workflow_dispatch:

env:
  DOCKER_BUILD_VERSION: 0.2-rc.1a

jobs:
  dotnet-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore ./WebApi.sln
    - name: Build
      run: dotnet build --no-restore ./WebApi.sln
    - name: Test
      run: dotnet test --no-build --verbosity normal ./WebApi.sln

  docker-build:
    needs: [ "dotnet-build" ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Docker Local Build
      run: |
        docker build --rm --no-cache --tag repasscloud/optechx.api.users:test --file Dockerfile.local .

  deploy:
    needs: [ "dotnet-build", "docker-build" ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Login to Dockerhub
      run: |
        echo -e "3sFVrUGxt7HbrbBUbB2kX9UBQWcA" | docker login -u danijeljw --password-stdin
    - name: Build docker image
      run: |
        docker build --rm --no-cache --tag "repasscloud/optechx.api.users:$DOCKER_BUILD_VERSION" --file Dockerfile.prod .
        docker tag "repasscloud/optechx.api.users:$DOCKER_BUILD_VERSION" "repasscloud/optechx.api.users"
    - name: Push to Dockerhub
      run: |
        docker image push "repasscloud/optechx.api.users:$DOCKER_BUILD_VERSION"
        docker image push "repasscloud/optechx.api.users"
    - name: Setup SSH
      run: |
        chmod 700 ./secrets
        chmod 400 ./secrets/user_host_rsa
    - name: Update dev server
      run: |
        ssh -o "StrictHostKeyChecking=no" -i ./secrets/user_host_rsa admin-rpc@engine.api.dev.optechx-data.com 'docker compose down; docker network prune --force; docker network create web; docker network create --internal caddy_internal; docker rmi repasscloud/optechx.api.users; docker compose up -d'

  pre-pr:
    needs: [ "docker-deploy" ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          # repository: repasscloud/optechx.api.users.git
          # token: ${{ secrets.PAT }}

      - name: Create report file
        run: date +%Y%m%d%H%M%S > ./report.txt

      - name: Push updates to optechx.api.users repo
        run: |
          updates=$(date +%Y%m%d%H%M%S)
          git config user.name 'Auto Commit'
          git config user.email 'auto-commit@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ secrets.PAT }}@github.com/repasscloud/optechx.api.users
          git add .
          git commit -m "$updates"
          git push

  auto-pr:
    needs: [ "pre-pr" ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: create pull request
        run: gh pr create -B main -H dev --title 'Auto PR dev into main' --body 'Automatically created by gh-actions.'
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

  auto-merge:
    needs: [ "auto-pr", "deploy" ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: merge pull request
        run: gh pr merge --squash
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}