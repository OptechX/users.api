name: Publish to Docker Hub

on:
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  DOCKER_BUILD_VERSION: "2.0"
  DOCKER_IMAGE_NAME: "repasscloud/optechx.users.api.prod"

jobs:
  dotnet-build-main:
    runs-on: ubuntu-latest
    steps:
      - name: 🛒 Checkout
        uses: actions/checkout@v3

      - name: 🚀 Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: 🚀 Install dotnet-ef Tools
        run: |
          dotnet tool install --global dotnet-ef
          export PATH="$PATH:$HOME/.dotnet/tools"

      - name: 🔐 Decrypt Repo
        run: ./decrypt_repo.sh
        env:
          LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PHRASE }}
        shell: bash

      - name: 🏃‍♂️ Run PowerShell script
        run: ./install_frameworks.ps1
        shell: pwsh
        
      - name: 🧶 Restore dependencies
        run: dotnet restore ./WebApi.sln

      - name: 🏗️ DotNet Build
        run: dotnet build --no-restore ./WebApi.sln

      - name: 🧪 DotNet Test
        run: dotnet test --no-build --verbosity normal ./WebApi.sln

      - name: 🚀 Generate migrations
        run: dotnet ef migrations add ReCreateLookupTables


  publish-docker-hub:
    needs: [ "dotnet-build-main" ]
    runs-on: ubuntu-latest
    steps:
      - name: 🛒 Checkout
        uses: actions/checkout@v3

      - name: 🔑 Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME_REPO }}
          password: ${{ secrets.DOCKERHUB_TOKEN_REPO }}

      - name: 🔐 Decrypt Repo
        run: ./decrypt_repo.sh
        env:
          LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PHRASE }}
        shell: bash

      - name: ✍️ Remove Line 12 from launchSettings.json
        run: sed -i.bak -e '12d' Properties/launchSettings.json
    
      - name: ❌ Remove backup of launchSettings.json
        run: |
          FILE=Properties/launchSettings.json
          if [ -f "$FILE" ]; then
            rm Properties/launchSettings.json.bak
          fi

      - name: 🐳🏗️ Docker .prod Build
        run: |
          docker build --rm --no-cache --tag "$DOCKER_IMAGE_NAME:$DOCKER_BUILD_VERSION" --file Dockerfile.prod .
          docker tag "$DOCKER_IMAGE_NAME:$DOCKER_BUILD_VERSION" "$DOCKER_IMAGE_NAME"

      - name: 🚀🐳 Publish to Docker Hub
        run: |
          docker image push "$DOCKER_IMAGE_NAME:$DOCKER_BUILD_VERSION"
          docker image push "$DOCKER_IMAGE_NAME"


  if_error_or_failure:
    runs-on: ubuntu-latest
    if: >-
      github.event.state == 'error' ||
      github.event.state == 'failure'
    steps:
      - env:
          DESCRIPTION: ${{ github.event.description }}
        run: |
          echo The status is error or failed: $DESCRIPTION