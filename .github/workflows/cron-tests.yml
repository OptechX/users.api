name: crontab

on:
  workflow_dispatch:
  schedule:
    - cron: '30 5 * * 1,3,5'
    - cron: '30 5 * * 0,2,4,6'

env:
  DOCKER_IMAGE_NAME: "repasscloud/optechx.users.api.prod"

jobs:
  dotnet-build:
    runs-on: ubuntu-latest
    steps:
      - name: 🛒 Checkout
        uses: actions/checkout@v3

      - name: 🚀 Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: 🚀 Install dotnet-ef Tools
        if: github.event.schedule != '30 5 * * 1,3,5'
        run: |
          dotnet tool install --global dotnet-ef
          export PATH="$PATH:$HOME/.dotnet/tools"

      - name: 🔐 Decrypt Repo
        run: ./decrypt_repo.sh
        env:
          LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PHRASE }}
        shell: bash

      - name: 🧶 Restore dependencies
        run: dotnet restore ./WebApi.sln

      - name: 🏗️ DotNet Build
        run: dotnet build --no-restore ./WebApi.sln

      - name: 🧪 DotNet Test
        run: dotnet test --no-build --verbosity normal ./WebApi.sln


  docker-build-local:
    needs: [ "dotnet-build" ]
    runs-on: ubuntu-latest
    steps:
      - name: 🛒 Checkout
        uses: actions/checkout@v3

      - name: 🔐 Decrypt Repo
        run: ./decrypt_repo.sh
        env:
          LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PHRASE }}
        shell: bash

      - name: 🔱 Set env
        run: echo "DOCKER_BUILD_VERSION=$(cat version_info)" >> $GITHUB_ENV

      - name: 🐳🏗️ Docker .local Build
        run: docker build --rm --no-cache --tag $DOCKER_IMAGE_NAME:$DOCKER_BUILD_VERSION --file Dockerfile.local .
  

  docker-build-prod:
    needs: [ "dotnet-build" ]
    runs-on: ubuntu-latest
    steps:
      - name: 🛒 Checkout
        uses: actions/checkout@v3

      - name: 🔐 Decrypt Repo
        run: ./decrypt_repo.sh
        env:
          LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PHRASE }}
        shell: bash

      - name: 🔱 Set env
        run: echo "DOCKER_BUILD_VERSION=$(cat version_info)" >> $GITHUB_ENV

      - name: 🐳🏗️ Docker .prod Build
        run: docker build --rm --no-cache --tag "$DOCKER_IMAGE_NAME:$DOCKER_BUILD_VERSION" --file Dockerfile.prod .

  docker-build-dev:
    needs: [ "dotnet-build" ]
    runs-on: ubuntu-latest
    steps:
      - name: 🛒 Checkout
        uses: actions/checkout@v3

      - name: 🔐 Decrypt Repo
        run: ./decrypt_repo.sh
        env:
          LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PHRASE }}
        shell: bash

      - name: 🔱 Set env
        run: echo "DOCKER_BUILD_VERSION=$(cat version_info)" >> $GITHUB_ENV

      - name: 🐳🏗️ Docker .local Build
        run: docker build --rm --no-cache --tag $DOCKER_IMAGE_NAME:$DOCKER_BUILD_VERSION --file Dockerfile.dev .
  
  if_error_or_failure:
    runs-on: ubuntu-latest
    if: >-
      github.event.state == 'error' ||
      github.event.state == 'failure'
    steps:
      - env:
          DESCRIPTION: ${{ github.event.description }}
        run: |
          echo The status is error or failed: $DESCRIPTION